#! /bin/sh
### BEGIN INIT INFO
# Provides:          paccap_ctrl
# Required-Start:    $local_fs $network $time
# Required-Stop:     $local_fs $time
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start paccap_ctrl daemon at boot time
# Description:       Allows R2DBE packet capture to be done through issuing
#                    record commands to paccap_cmd.py.
### END INIT INFO

NAME=paccap_ctrl
EXEC=/usr/local/bin/${NAME}.py
ARGS="-v"
PIDFILE=/var/run/${NAME}.pid
KILLSIG=INT
OUTPUT="--quiet"

do_start() {
	echo "Starting paccap_ctrl"
	start-stop-daemon ${OUTPUT} --oknodo --pidfile ${PIDFILE} --make-pidfile --background --exec ${EXEC} --start -- ${ARGS} || status
	return $?
}

do_stop() {
	echo "Stopping paccap_ctrl"
	start-stop-daemon ${OUTPUT} --oknodo --pidfile ${PIDFILE} --remove-pidfile --retry=${KILLSIG}/10/KILL/5 --stop
	return $?
}

do_status() {
	echo "Checking paccap_ctrl"
	start-stop-daemon ${OUTPUT} --status --pidfile ${PIDFILE} --status
	stat=$?
	case ${stat} in
		0)
			echo "${NAME} is running"
			;;
		1)
			echo "${NAME} is not running, but ${PIDFILE} exists"
			;;
		3)
			echo "${NAME} is not running"
			;;
		4)
			echo "Could not determine status for ${NAME}"
			;;
	esac
	return ${stat}
}

case "$1" in
	start)
		do_start
		;;
	stop)
		do_stop
		;;
	status)
		do_status
		;;
	restart)
		do_stop
		case "$?" in
			0|1)
				do_start
				;;
			*)
				echo "Failed to stop ${NAME}, aborting restart"
				exit 1
				;;
		esac
		;;
	*)
		echo "Usage: $0 {start | stop}"
		exit 1
		;;
esac

exit $?
